# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy everything to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.115.4
    # node/npm have default versions if not specified...which changes
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [18.x]
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.8.1
        with:
          node-version: ${{ matrix.node-version }}
      
      # Checkout and bring in repositories...and any sub-modules
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
        # nothing uses node.js deps, but leave it here for now in case
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          cd blog
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/blog"
        # each step gets a fresh command line, so we should be back at the root directory
        # -r flag gets all child files and directories

      # Open environment.js and replace BUILD_NUMBER with the actual build number
      - name: Set build number
        run: sed -i 's/BUILD_NUMBER/'"$GITHUB_RUN_NUMBER"'/' external/ModelMotionizer/src/environment.js
      
      # Build Model Motionizer repository
      - name: Install and build Model Motionizer
        run: |
          npm install
          npm run build
        working-directory: external/ModelMotionizer
      - name: Package all files for site
        run: |
          mkdir ./publish
          cp -r ./portfolio ./publish/portfolio
          cp -r ./blog/public ./publish/blog
          cp -r ./external/ModelMotionizer/dist ./publish/model-motionizer
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./publish

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
